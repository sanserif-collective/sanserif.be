---
import Container from 'components/Container.astro';
import OneProject from 'components/home/OneProject.astro';
import ThreeProjects from 'components/home/ThreeProjects.astro';
import TwoProjects from 'components/home/TwoProjects.astro';
import type { Home } from 'types/routes/home';

type Props = {
  text: string;
  projects: Home.Projects.Set[];
};

const { text, projects }: Props = Astro.props;
---

<Container
  class:list={[
    'gap-x-custom-space grid-flow-col children:flex portrait:grid-flow-row',
    'portrait:gap-x-0 portrait:gap-y-24 portrait:children:row-auto',
  ]}
>
  <header
    class:list={[
      'col-start-1 col-end-3 row-start-2 row-end-7 items-center',
      'portrait:col-start-2 portrait:col-end-12',
    ]}
  >
    <p class="max-w-md">{text}</p>
  </header>
  {
    projects.map(({ __typename, ...projects }) => (
      <>
        {__typename === 'ComponentHomeOneProject' && (
          <OneProject projects={projects as Home.Projects.Components.OneProject} />
        )}
        {__typename === 'ComponentHomeTwoProjects' && (
          <TwoProjects projects={projects as Home.Projects.Components.TwoProjects} />
        )}
        {__typename === 'ComponentHomeThreeProjects' && (
          <ThreeProjects projects={projects as Home.Projects.Components.ThreeProjects} />
        )}
      </>
    ))
  }
</Container>
