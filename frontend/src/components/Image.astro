---
import type { HTMLAttributes, HTMLTag, Polymorphic } from 'astro/types';

type Props<Tag extends HTMLTag> = HTMLAttributes<'img'> &
  Polymorphic<{ as: Tag }> & {
    fit?: keyof typeof fits;
  };

const fits = {
  cover: 'object-cover',
  container: 'object-contain',
};

const {
  src,
  alt,
  width,
  height,
  fit = 'cover',
  as: Tag = 'div',
  class: className,
  'class:list': classList,
  loading = 'lazy',
  fetchpriority = 'auto',
  decoding = 'async',
  ...props
}: Props<'div'> = Astro.props;
---

<Tag class:list={['relative', className, classList]} {...props}>
  <svg viewBox={`0 0 ${width} ${height}`}></svg>
  <img
    src={src}
    alt={alt}
    height={height}
    width={width}
    loading={loading}
    decoding={decoding}
    fetchpriority={fetchpriority}
    class:list={['absolute inset-0 h-full w-full', fits[fit]]}
  />
</Tag>
